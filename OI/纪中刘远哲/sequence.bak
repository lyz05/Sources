const maxn=1000;
type arr=array[0..maxn] of longint;
	arr1=array[0..maxn] of arr;
var	i,j,k,l,m,n,ans,len1,len2:longint;
	a:array[1..maxn] of longint;
	s,t:arr1;
procedure swap(var x,y:longint);
var t:longint;
begin
	t:=x;
	x:=y;
	y:=t;
end;
procedure qsort(l,r:longint);
var m,i,j:longint;
begin
 m:=a[(l+r) div 2];
 i:=l;
 j:=r;
 repeat
  while a[i]<m do inc(i);
  while a[j]>m do dec(j);
  if i<=j then begin
   swap(a[i],a[j]);
   inc(i);dec(j);
  end;
 until i>j;
 if l<j then qsort(l,j);
 if i<r then qsort(i,r);
end;
procedure dfs(var x:arr1;len,l,r:longint);
var i,deep,lenn:longint;
begin
	deep:=x[0,0];
	lenn:=x[deep,0];
        if len=0 then begin
		inc(x[0,0]);
                deep:=x[0,0];
                x[deep]:=x[deep-1];
		exit;
	end;
	if l>r then exit;
	for i:=0 to 1 do begin
		if i=1 then begin
                        deep:=x[0,0];
                        lenn:=x[deep,0];
			inc(lenn);
			x[deep,0]:=lenn;
			x[deep,lenn]:=a[l];
				dfs(x,len-1,l+1,r);
                        deep:=x[0,0];
                        lenn:=x[deep,0];
			x[deep,lenn]:=0;
			dec(lenn);
			x[deep,0]:=lenn;
		end else begin
				dfs(x,len,l+1,r);
		end;
	end;
end;
begin
	readln(n);
	for i:=1 to n do read(a[i]);
	qsort(1,n);

	for len1:=1 to n-1 do
		for len2:=1 to n-1 do
				for i:=len1 to n-len2 do begin
					s[0,0]:=1;
					dfs(s,len1,1,i);
                                        t[0,0]:=1;
                                        dfs(t,len2,i+1,n);
					for j:=1 to s[0,0] do
						for k:=1 to t[0,0] do begin
							for l:=1 to len1 do write(s[j,l],' ');
                                                        write('  ');
							for l:=1 to len2 do write(s[k,l],' ');
							writeln;
						end;
				end;
	writeln(ans);
end.
