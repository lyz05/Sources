const size=1000;maxn=1000;
var	i,j,k,m,n,ans,x,y,t:longint;
	q:array[1..maxn] of longint;
	map:array[1..size,1..size] of boolean;
     s:string;
	p:array[1..maxn] of boolean;
function ltx(x,y:longint):boolean;
var k:longint;
begin
	ltx:=false;
	p[x]:=true;
	if x=y then begin
                ltx:=true;
                p[x]:=false;
                exit;
        end;
	for k:=1 to n do
		if (map[x,k]<>0) and not p[k] then begin
			if ltx(k,y) then ltx:=true;
		end;
	p[x]:=false;
end;
begin
	readln(n,m);
	for i:=1 to n do read(q[i]);
	while true do begin
		read(x,y);
		read(s);
		if s<>'' then break;
		map[x,y]:=true;
		map[y,x]:=true;
	end;
	delete(s,1,1);
	t:=x;
	x:=y;
	val(s,y);
	for i:=1 to m do begin
		if i<>1 then read(t,x,y);
		x:=x xor ans;y:=y xor ans;
		case t of
			1:begin
				dec(map[x,y]);
				dec(map[y,x]);
			end;
			2:begin
				if ltx(x,y) then ans:=q[x]*q[y] else ans:=q[x]+q[y];
				writeln(ans);
			end;
			3:q[x]:=y;
		end;
	end;
end.
