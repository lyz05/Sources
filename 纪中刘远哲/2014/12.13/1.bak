const	maxn=100000;
type	arr=array[1..2] of longint;
	arr1=array[1..8] of longint;
var	i,j,m,n,ans:longint;
	a:array[1..maxn] of arr;
	sum:array[-1..maxn] of arr1;
procedure swap(var x,y:arr);
var t:arr;
begin
	t:=x;
	x:=y;
	y:=t;
end;
procedure qsort(l,r:longint);
var m,i,j:longint;
begin
 m:=a[(l+r) div 2,1];
 i:=l;
 j:=r;
 repeat
  while a[i,1]<m do inc(i);
  while a[j,1]>m do dec(j);
  if i<=j then begin
   swap(a[i],a[j]);
   inc(i);dec(j);
  end;
 until i>j;
 if l<j then qsort(l,j);
 if i<r then qsort(i,r);
end;
procedure del(x,y:arr1;var z:arr1);
var	i:longint;
begin
	for i:=1 to 8 do z[i]:=x[i]-y[i];
end;
function judge(x:arr1):boolean;
var	i,kk:longint;
begin
	kk:=0;
	for i:=1 to 8 do begin
		if x[i]<>0 then begin
			inc(kk); 
			if (i<>1) and (x[i]<>x[i-1]) then exit(false);
		end;
	end;
	if kk>=m then exit(true) else exit(false);
end;
begin
	assign(input,'1.in');reset(input);
	//assign(output,'.out');rewrite(output);

	readln(n,m);
	for i:=1 to n do readln(a[i,1],a[i,2]);
	qsort(1,n);

	fillchar(sum[0],sizeof(sum[0]),0);
	for i:=1 to n do begin
		sum[i]:=sum[i-1];
		inc(sum[i,a[i,2]]);
	end;
	ans:=0;
	for i:=1 to n-1 do begin
		for j:=n downto i+1 do begin
			if a[j,1]-a[i,1]<ans then continue;
			del(sum[j],sum[i],sum[-1]);
			if judge(sum[-1]) then begin
				ans:=a[j,1]-a[i,1];
			end;
		end;
	end;
	
	writeln(ans);
end.
