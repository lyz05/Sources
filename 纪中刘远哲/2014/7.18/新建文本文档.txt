var
 str1,str2,t:string;
 a,b,c:array[1..300] of integer;
 l, l1,l2:integer;
     i:integer;

  begin
   readln(str1);readln(str2);

   if str1<str2 then
     begin t:=str1;str1:=str2;str2:=t;write('-');end;

   l1:=length(str1);
   for i:=1 to l1 do
   a[i]:=ord(str1[l1-i+1])-48;
   l2:=length(str2);
   for i:=1 to l2 do
   b[i]:=ord(str2[l2-i+1])-48;
   if l1>=l2 then l:=l1 else l:=l2;

   for i:=1 to l do
    begin
     if a[i]<b[i]  then
       begin
         a[i+1]:=a[i+1]-1;
         a[i]:=a[i]+10 ;
       end;
     c[i]:=a[i]-b[i];
    end;
    while c[l]=0 do l:=l-1;
    for i:=l downto 1 do
    write(c[i]);
    readln

   end.













var n,i,j,tmp,ans:longint;
    a:array[0..10000,1..4] of longint;
function jz:longint;
var i:longint;
begin
  jz:=0;
  for i:=1 to n do inc(jz,a[i,a[i,4]]);
end;
procedure dfs(deep:longint);
var i,j:longint;
begin
  if deep>n then
  begin
    a[0]:=a[n];
    for i:=1 to n-1 do
    begin
      if (a[i-1,4]>a[i,4]) and (a[i+1,4]>a[i,4]) then continue;
      if (a[i-1,4]<a[i,4]) and (a[i+1,4]<a[i,4]) then continue;
      exit;
    end;
    tmp:=jz;
    if tmp>ans then ans:=tmp;
    exit;
  end else
  begin
    for i:=1 to 3 do
    begin
      a[deep,4]:=i;
      if (deep<>1) and (a[deep-1,4]=a[deep,4]) then continue;
       dfs(deep+1);
      a[deep,4]:=0;
    end;
  end;
end;
begin
  readln(n);
  for i:=1 to n do readln(a[i,1],a[i,2],a[i,3]);

  dfs(1);
  writeln(ans);
end.


10 10
2 4 1 3 1 2 5 6 1 1 
1 2 1 1 1 1 7 8 9 10  

var n,m,i,j,min:longint;
    a,f:array[1..100001] of longint;
    q:array[1..50000] of longint;
    p:array[1..100001] of boolean;
procedure dfs(deep,k:longint);
var i,j:longint;
begin
  if k=n+1 then
  begin
    deep:=deep-1;
    if deep<min then min:=deep;
    exit;
  end else
  begin
    if f[k]<>0 then
    begin
      dfs(deep+f[k],n+1);
      exit;
    end;
    p[k]:=true;
    for i:=1 to n+1 do
     if i<>k then
     begin
       if (i>k) and (i-k>a[k]) then continue;
       if p[i] then continue;
        dfs(deep+1,i);
     end;
    p[k]:=false;
  end;
end;
begin
  readln(n,m);
  for i:=1 to n do read(a[i]);
  for i:=1 to m do read(q[i]);

  for i:=1 to m do
  begin
    min:=maxlongint;
    dfs(1,q[i]);
    f[q[i]]:=min;
    write(min,' ');
  end;
end.
